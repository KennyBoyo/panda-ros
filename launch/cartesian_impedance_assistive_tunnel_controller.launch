<?xml version="1.0" ?>
<launch>
  <arg name="robot_ip" default="172.16.0.104"/>
  <arg name="load_gripper" default="true" />

  
  <include file="$(find panda_ros)/launch/franka_control_hazard.launch" >
    <arg name="robot_ip" value="$(arg robot_ip)" />
    <arg name="load_gripper" value="$(arg load_gripper)" />
  </include>

  <node name="print_text" pkg="rostopic" type="rostopic" args="echo $(find panda_ros)" output="screen"/>
  <rosparam command="load" file="$(find panda_ros)/config/franka_panda_controller_swc.yaml" />

  <rosparam command="load" file="$(find franka_panda_controller_swc)/config/franka_panda_controller_swc.yaml" />

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="cartesian_impedance_equilibrium_controller"/>

  <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find panda_ros)/launch/rviz/franka_description_with_trajectory_tunnel.rviz"/>
  
  <!-- <node name="assistance_tunnel" pkg="panda_ros" type="old_tunnel.py" required="true" output="screen">
    <param name="link_name" value="panda_link0" />
  </node> -->

  <!-- <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" /> -->
  <arg name="record_bag" default="false"/>
  <node pkg="rosbag" type="record" name="training_rosbag" if="$(arg record_bag)"
    args="record -O /franka_state_controller/franka_states /cartesian_impedance_equilibrium_controller/equilibrium_pose /cartesian_impedance_equilibrium_controller/stiffness_config
        /unity/desired_trajectory"
  />

  <node name="message_synchroniser" pkg="panda_ros" type="message_synchroniser.py" output="screen" required="true"/>

  <node name="painting" pkg="panda_ros" type="painting.py" output="screen" required="true"/>
  <node name="goal_handler" pkg="panda_ros" type="goal_handler.py" output="screen" required="true"/>
  
</launch>


